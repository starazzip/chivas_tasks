
# 問題總結

## 目標

使用 Python 以兩種不同的實作，幫使用者擴充登入功能。


* 輸入：
  * 使用者提供的程式碼
* 輸出：
  * 添加三方登入後的程式碼
  * 提供各種登入方式的範例

## 限制條件
  * 添加「Google登入」「FB登入」和「Github登入」。
  * 以用戶提供的程式碼進行功能添加。
  * 用 print 簡化登入流程
---
# 實作一：使用工廠模式（Factory）實作
## 方法概述：使用工廠模式，將多種登入的邏輯封裝在個別類別，統一介面，讓流程保持簡潔。
**優點**
* 擴充簡單：後續增加不同的登入方式，只需要實作對應的類別即可。
* 可測試性高：利於單元測試。

**缺點**
* 類別變多：每種登入方式都是一個類別，檔案會變多。
* 工廠內依然有部分if-else邏輯。
```python
```

# 實作二：使用一般if-else實作方式
## 方法概述：不使用工廠，在一個類別內使用if-else判斷需要使用哪種登入方式。
**優點**
* 程式門檻低：簡單，容易上手，小專案可以快速開發。
* 單一檔案：所有邏輯集中在一個類別。

**缺點**
* 可測試性低：所有流程在同一個地方，難以測試。
* 可擴充性低：隨著功能擴充會有多個if-else邏輯。
* 耦合度高：所有登入方式都寫在同一個地方，難以維護。

```python
```